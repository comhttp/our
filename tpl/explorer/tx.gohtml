<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="https://s.okno.rs/parallelcoin/img/favicon.png">
    <link rel="apple-touch-icon" sizes="76x76" href="https://s.okno.rs/parallelcoin/img/apple-icon.png">
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/http-vue-loader/src/httpVueLoader.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/@tailwindcss/typography/dist/typography.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/@tailwindcss/forms/dist/forms.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/@tailwindcss/line-clamp/dist/line-clamp.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/@tailwindcss/aspect-ratio/dist/aspect-ratio.min.css" />
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
    <link rel="stylesheet" href="https://s.okno.rs/explorer/css/style.css">
    <style>

        .inputbox{
            margin-top: -1rem;
        }
        label{
            position: relative;
            top: 10px;
            left: 12px;
            font-style: normal;
            font-weight: normal;
            font-size: 12px;
            line-height: 16px;
            padding: 0 4px;
            color: var(--font-primary);
        }
        .outter-box{
            align-items: center;
            width: 100%;
            min-height: 42px;
            border: 1px solid var(--divider-color);
            box-sizing: border-box;
            transition: border 0.5s;
            border-radius: 4px;
            padding: 8px;
        }
        .mainbox{
            display: flex;
            align-items: center;
            background: none;
            border: none;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            line-height: 24px;
            color: var(--font-primary);
            letter-spacing: 0.44px;
        }

        .mainbox:focus{
            outline: none;

        }

        .focus{
            border: 1px solid var(--primary-color);
        }
        .mainbox::-webkit-input-placeholder {
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            line-height: 24px;
            display: flex;
            align-items: center;
            letter-spacing: 0.44px;
            color: var(--font-secondary);
        }

        /* Chrome, Safari, Edge, Opera */
        .mainbox::-webkit-outer-spin-button,
        .mainbox::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        .mainbox[type=number] {
            -moz-appearance:textfield;
        }

        .mainbox:-webkit-autofill,
        .mainbox:-webkit-autofill:hover,
        .mainbox:-webkit-autofill:focus
        {
            border: 1px solid var(--divider-color);
            -webkit-text-fill-color: var(--font-primary);
            box-shadow: 0 0 0px 1000px var(--bg-color) inset;
        }

        .icon{
            width: 17.5px;
            height: 17.5px;
            margin-right: 12px;
            margin-left: 7px;
            cursor: pointer;
        }

        #icon-find{
            fill: var(--font-primary);
        }
        #icon-find:hover{
            fill: var(--accent-color);
        }
    </style>
    <title>ParallelCoin block explorer</title>
</head>

<body>

<div id="explorer">
    <div class="blocks">
        <h3>Transaction</h3>
        <table>
            <tr>
                <th>Height</th><td><a class="outside-link col-item text-body-1" rel='prefetch' :href='"blocks/"+block.height'>{{`{{ block.height }}`}}</a></td>
            </tr>
            <tr>
                <th>Hash</th><td>{{`{{ block.hash }}`}}</td>
            </tr>
            <tr>
                <th>Confirmations</th><td>{{`{{ block.confirmations }}`}}</td>
            </tr>
            <tr>
                <th>Difficulty</th><td>{{`{{ block.confirmations }}`}}</td>
            </tr>



            <tr>
                <th>Nonce</th><td>{{`{{ block.nonce }}`}}</td>
            </tr>
            <tr>
                <th>POW algo</th><td>{{`{{ block.pow_algo }}`}}</td>
            </tr>


            <tr>
                <th>POW algo id</th><td>{{`{{ block.nonce }}`}}</td>
            </tr>
            <tr>
                <th>POW hash</th><td>{{`{{ block.pow_hash }}`}}</td>
            </tr>



            <tr>
                <th>Merkle root</th><td>{{`{{ block.merkleroot }}`}}</td>
            </tr>
            <tr>
                <th>Next block hash</th><td>{{`{{ block.nextblockhash }}`}}</td>
            </tr>
            <tr>
                <th>Previous block hash</th><td>{{`{{ block.previousblockhash }}`}}</td>
            </tr>
            <tr>
                <th>Txs</th><td>{{`{{ block.confirmations }}`}}</td>
            </tr>
            <tr>
                <th>Time</th><td>{{`{{ block.confirmations }}`}}</td>
            </tr>
            <tr>
                <th>Size</th><td>{{`{{ block.size }}`}}</td>
            </tr>


        </table>
    </div>




    <div v-html=info.blocks></div>
</div>

<script>

    const limit = 10;
    const offset = 0;





    new Vue({
        el: '#explorer',
        data() {
            return {
                isLoading: true,
                info:[],
                block: []
            }
        },
        mounted() {
            this.isLoading = false
            this.getStatus();
        },
        methods: {
            async getStatus(){
                const resStatus = await fetch('https://jorm.okno.rs/e/data/parallelcoin/info/explorer');
                const status = await resStatus.json();
                this.info = status.status;

                const resBlock = await fetch(`https://jorm.okno.rs/e/data/parallelcoin/blocks/{{.}}`);
                const block = await resBlock.json();
                this.block = block;

                console.log(this.block)
            }
        },
        components:{
            infobox: httpVueLoader('https://s.okno.rs//explorer/vue/infobox.vue'),
        },
    });
</script>
</body>

</html>
